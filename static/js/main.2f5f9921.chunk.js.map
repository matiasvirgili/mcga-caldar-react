{"version":3,"sources":["components/Button.js","components/Header.js","components/Caldera.js","components/Calderas.js","components/AddCaldera.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Caldera","caldera","onDelete","tipo","cursor","id","tiempoMantenimientoMinutos","estaInstalada","Calderas","calderas","map","index","AddCaldera","useState","setTipo","setEstaInstalada","setTiempoMantenimientoMinutos","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddCaldera","setShowAddCaldera","setCalderas","useEffect","getCalderas","a","fetchCalderas","calderasFromServer","fetch","res","json","data","Math","floor","random","newCaldera","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f5f9921.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n};\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAdd ? 'red' : 'green'}\r\n        text={showAdd ? 'Close' : 'Add'}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Boilers',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Caldera = ({ caldera, onDelete }) => {\r\n  return (\r\n    <div className=\"caldera\">\r\n      <h3>\r\n        Boiler type: {caldera.tipo}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(caldera.id)}\r\n        />\r\n      </h3>\r\n      <p>Maintenance time: {caldera.tiempoMantenimientoMinutos} min</p>\r\n      <p>Is installed: {caldera.estaInstalada}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Caldera;\r\n","import Caldera from './Caldera';\r\n\r\nconst Calderas = ({ calderas, onDelete }) => {\r\n  return (\r\n    <>\r\n      {calderas.map((caldera, index) => (\r\n        <Caldera key={index} caldera={caldera} onDelete={onDelete} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calderas;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst AddCaldera = ({ onAdd }) => {\r\n  const [tipo, setTipo] = useState('');\r\n  const [estaInstalada, setEstaInstalada] = useState(false);\r\n  const [tiempoMantenimientoMinutos, setTiempoMantenimientoMinutos] =\r\n    useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!tipo) {\r\n      alert('Please add a type');\r\n      return;\r\n    }\r\n\r\n    onAdd({ tipo, tiempoMantenimientoMinutos, estaInstalada });\r\n\r\n    setTipo('');\r\n    setTiempoMantenimientoMinutos('');\r\n    setEstaInstalada(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Boiler type</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Type\"\r\n          value={tipo}\r\n          onChange={(e) => setTipo(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Maintenance time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Time in minutes\"\r\n          value={tiempoMantenimientoMinutos}\r\n          onChange={(e) => setTiempoMantenimientoMinutos(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Is installed</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={estaInstalada}\r\n          placeholder=\"Add Caldera\"\r\n          value={estaInstalada}\r\n          onChange={(e) => setEstaInstalada(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Boiler\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCaldera;\r\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Calderas from './components/Calderas';\nimport AddCaldera from './components/AddCaldera';\n\nfunction App() {\n  const [showAddCaldera, setShowAddCaldera] = useState(false);\n  const [calderas, setCalderas] = useState([]);\n  useEffect(() => {\n    const getCalderas = async () => {\n      const calderasFromServer = await fetchCalderas();\n      setCalderas(calderasFromServer);\n    };\n    getCalderas();\n  }, []);\n\n  // Fetch calderas\n  const fetchCalderas = async () => {\n    const res = await fetch('http://localhost:5000/Boilers');\n    const data = await res.json();\n    return data;\n  };\n\n  // Add caldera\n  const addCaldera = (caldera) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newCaldera = { id, ...caldera };\n    setCalderas([...calderas, newCaldera]);\n  };\n\n  // Delete caldera\n  const deleteCaldera = (id) => {\n    setCalderas(calderas.filter((caldera) => caldera.id !== id));\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddCaldera(!showAddCaldera)}\n        showAdd={showAddCaldera}\n      />\n      {showAddCaldera && <AddCaldera onAdd={addCaldera} />}\n      {calderas.length > 0 ? (\n        <Calderas calderas={calderas} onDelete={deleteCaldera} />\n      ) : (\n        'No Boilers To Show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}